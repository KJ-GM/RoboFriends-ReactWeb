{"ast":null,"code":"var _jsxFileName = \"/Users/karamjammal/Desktop/React/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      robots: robots\n    });\n    console.log('check');\n  } // Function that is invoked when SearchBox input changes - >  Changes the state of searchfiled\n\n\n  render() {\n    // Filters the Robots array according to the searchfield state\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RobotFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/karamjammal/Desktop/React/robofriends/src/App.js"],"names":["React","Component","CardList","robots","SearchBox","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","componentDidMount","console","log","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,cAdc,GAcIC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACD,KAhBa;;AAEZ,SAAKC,KAAL,GAAa;AACXV,MAAAA,MAAM,EAAE,EADG;AAEXO,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAZyB,CAc1B;;;AAIAC,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,cAAc,GAAG,KAAKL,KAAL,CAAWV,MAAX,CAAkBgB,MAAlB,CAA0BC,KAAD,IAAW;AACzD,aAAOA,KAAK,CAACC,IAAN,CACJC,WADI,GAEJC,QAFI,CAEK,KAAKV,KAAL,CAAWH,WAAX,CAAuBY,WAAvB,EAFL,CAAP;AAGD,KAJsB,CAAvB;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKf;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEW;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhCyB;;AAmC5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ robots: robots });\n    console.log('check');\n  }\n\n  // Function that is invoked when SearchBox input changes - >  Changes the state of searchfiled\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    // Filters the Robots array according to the searchfield state\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RobotFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <CardList robots={filteredRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}